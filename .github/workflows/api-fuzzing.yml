name: API Fuzzing Tests

on:
  pull_request:
  workflow_dispatch:  # Allow manual trigger

jobs:
  api-fuzzing:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python 3.13
      uses: actions/setup-python@v5
      with:
        python-version: "3.13"

    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Start FastAPI server
      run: |
        python -m uvicorn main:app --host 0.0.0.0 --port 8000 &
        # Wait for server to start
        timeout 30 bash -c 'until curl -f http://localhost:8000/health; do sleep 1; done'
      env:
        PYTHONPATH: .

    # - name: Run all tests
    #   run: |
    #     python -m pytest 
    #       -v \
    #       --tb=short \
    #       --maxfail=3 \
    #       --timeout=300
    #   env:
    #     PYTHONPATH: .
    
    - name: Generate test report
      if: always()
      run: |
        mkdir -p reports
        python -m pytest test_api_fuzz.py::TestAPIFuzzing::test_api_fuzzing_basic \
          --html=reports/api-fuzzing-report.html \
          --self-contained-html \
          -v
      continue-on-error: true
    
    - name: Upload test reports
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-reports-python
        path: reports/
        retention-days: 30
    
    - name: Stop FastAPI server
      if: always()
      run: |
        # Kill any remaining uvicorn processes
        pkill -f uvicorn || true

  security-scan:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python 3.13
      uses: actions/setup-python@v5
      with:
        python-version: "3.13"
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install bandit pip-audit
    
    - name: Run security scan with bandit
      run: |
        mkdir -p reports
        bandit -r . -f json -o reports/bandit-report.json || true
        bandit -r . -f txt
      continue-on-error: true
    
    - name: Check for known security vulnerabilities with pip-audit
      run: |
        mkdir -p reports
        pip-audit --format=json --output=reports/pip-audit-report.json || true
        pip-audit --format=text
      continue-on-error: true
    
    - name: Upload security reports
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: security-reports
        path: reports/
        retention-days: 30
